apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'kotlin'
war {
    archiveName = 'ROOT.war'
}


configurations.all {
    resolutionStrategy.cacheChangingModulesFor 1, 'minutes'
}
buildscript {
    ext{
        springBootVersion='2.0.4.RELEASE'
        kotlinVersion = '1.3.21'
        slf4jVersion = '1.7.21'
        log4j2Version = '2.7'
        commonsLogging = '1.2'
    }
    repositories{
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('org.junit.platform:junit-platform-gradle-plugin:1.0.1')
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}
apply plugin: 'java'
apply plugin: 'eclipse'
eclipse {
    classpath {
        containers 'org.jetbrains.kotlin.core.KOTLIN_CONTAINER'
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.rooting.best'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
repositories {
    mavenCentral()
}

dependencies {
    compile('org.projectlombok:lombok:1.16.20')

    testCompile group: 'junit', name: 'junit', version: '4.12'
    // Web
    compile('org.springframework.boot:spring-boot-starter-web')
    // JDBC
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    // JPA (구동되는 DB가 있어야함)
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.hibernate:hibernate-core:5.4.15.Final")

//    // SpringBoot Web
//    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
//        exclude module: 'spring-boot-starter-logging'
//    }
//    // SpringBoot AOP
//    compile("org.springframework.boot:spring-boot-starter-aop:${springBootVersion}") {
//        exclude module: 'spring-boot-starter-logging'
//    }

    // SLF4J-Log4j2
//    compile("commons-logging:commons-logging:${commonsLogging}")
//    compile("org.slf4j:slf4j-api:${slf4jVersion}")
//    compile("org.apache.logging.log4j:log4j-api:${log4j2Version}")
//    compile("org.apache.logging.log4j:log4j-core:${log4j2Version}")
//    compile("org.apache.logging.log4j:log4j-slf4j-impl:${log4j2Version}")

    // MYSQL
    compile("mysql:mysql-connector-java")
    // WebService
    compile('org.springframework.ws:spring-ws-core')
    // Validation annotation
    compile('org.springframework.boot:spring-boot-starter-validation')
    // logback condition setting
    compile('org.codehaus.janino:janino')
    // RestTemplate
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5'
    //Encrypt DBInfo
    compile group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '2.1.0'
    //RealtimePropertyReader
    compile group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
}
